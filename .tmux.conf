# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'Morantron/tmux-fingers'
set -g @fingers-key F

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes 'false'
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

set-option -sg escape-time 10
bind x kill-pane
bind-key / copy-mode \; send-key ?

set -g focus-events on



# run-shell ~/.tmux/resurrect/resurrect.tmux
# run-shell ~/.tmux/sessions/sessionist.tmux
# run-shell ~/.tmux/extracto/extrakto.tmux
# run-shell ~/.tmux/continuum/continuum.tmux
# run-shell ~/.tmux/tmux-sidebar/sidebar.tmux

# run-shell /home/klemens/.config/tmux/yank/yank.tmux
# vim

# true colors
# set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

#
# in .tmux.conf
# set -g @yank_selection 'primary'
# set -g @shell_mode 'vi'
# bind -t vi-copy y copy-pipe "xclip -sel clip -i"

# bind C-p run-shell "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# bind C-y run-shell "tmux show-buffer | xclip -sel clip -i"
# bind-key -t vi-copy y copy-pipe "xclip"
# Vim style
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
# Search back to last prompt (mnemonic: "[b]ack"); searches for non-breaking
# space in prompt.
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "Â "

# setw -g mode-keys vi
# unbind p
# bind p paste-buffer
# bind-key -t vi-copy 'v' begin-selection
# # bind-key -t vi-copy 'y' copy-selection
# bind-key -t vi-copy 'y' copy-pipe "xclip"

# move tmux copy buffer into x clipboard
# bind-key -t vi-copy 'y' copy-selection; run "tmux save-buffer - | xclip -i"

# buffer

set -g default-terminal "screen-256color"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# remap prefix from 'C-b' to 'C-s'
 unbind C-b
 set-option -g prefix C-s
 bind-key C-s send-prefix

#set -g mode-mouse on
#set -g mouse-select-pane on

bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

bind r source-file ~/.tmux.conf \; display "Configuration reloaded."

set-option -g allow-rename off

# switch panes using Alt-arrow without prefix
 bind -n C-M-h select-pane -L
 bind -n C-M-l select-pane -R

 set -g base-index 1

bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-H resize-pane -L 5
bind -n M-L resize-pane -R 5

# bind -n M-k select-pane -U
# bind -n M-j select-pane -D
# bind -n M-l select-pane -U
# bind -n M-h select-pane -D
bind -n M-j  previous-window
bind -n M-k  next-window

bind C-y set-window-option synchronize-panes on \;  set-window-option status-bg red \; display-message "pane sync on"
bind C-g set-window-option synchronize-panes off \;  set-window-option status-bg default \; display-message "pane sync off"


unbind [
bind [ previous-window
unbind ]
bind ] next-window

#bind -n M-Down  previous-window
#bind -n M-Up next-window
#
##

# Allows copying
setw -g mode-keys vi
unbind p
bind p paste-buffer


set -g history-limit 100000
# set -g renumber-windows on
# setw -g monitor-activity on
# set -g visual-activity off
# bind , command-prompt -p "(rename-window '#W')" "rename-window '%%'"
# # Active window.
# setw -g window-status-current-fg white
# setw -g window-status-current-bg black
# setw -g window-status-current-attr bright
# setw -g window-status-current-format "#[fg=colour172]#I#[fg=white] #W#F"
# inactive windows style
set -g window-style 'fg=colour247,bg=colour232'
set -g window-active-style 'fg=default,bg=black'


# Window activity.
# set -g window-status-activity-style "bg=back,fg=colour246"
set -g status-interval 5
# set -g window-style 'fg=colour252,bg=colour240'
# set -g window-active-style 'fg=colour250,bg=colour235'
# set active-inactive window styles



######################
### DESIGN CHANGES ###
######################

# panes
#set -g pane-border-fg black
#set -g pane-active-border-fg brightred

### Status bar design
## status line
#set -g status-justify left
#set -g status-bg default
#set -g status-fg colour12
#set -g status-interval 2

## messaging
#set -g message-fg black
#set -g message-bg yellow
#set -g message-command-fg blue
#set -g message-command-bg black

##window mode
#setw -g mode-bg colour6
#setw -g mode-fg colour0

## window status
#setw -g window-status-format " #F#I:#W#F "
#setw -g window-status-current-format " #F#I:#W#F "
#setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
#setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
#setw -g window-status-current-bg colour0
#setw -g window-status-current-fg colour11
#setw -g window-status-current-attr dim
#setw -g window-status-bg green
#setw -g window-status-fg black
#setw -g window-status-attr reverse

## Info on left (I don't have a session display for now)
#set -g status-left ''

## loud or quiet?
#set-option -g visual-activity off
#set-option -g visual-bell off
#set-option -g visual-silence off
#set-window-option -g monitor-activity off
#set-option -g bell-action none

#set -g default-terminal "screen-256color"

## The modes {
#setw -g clock-mode-colour colour135
#setw -g mode-attr bold
#setw -g mode-fg colour196
#setw -g mode-bg colour238

## }
## The panes {

#set -g pane-border-bg colour235
#set -g pane-border-fg colour238
#set -g pane-active-border-bg colour236
#set -g pane-active-border-fg colour51

## }
## The statusbar {

#set -g status-position bottom
#set -g status-bg colour234
#set -g status-fg colour137
#set -g status-attr dim
#set -g status-left ''
#set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M '
#set -g status-right-length 50
#set -g status-left-length 20

#setw -g window-status-current-fg colour81
#setw -g window-status-current-bg colour238
#setw -g window-status-current-attr bold
#setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

#setw -g window-status-fg colour138
#setw -g window-status-bg colour235
#setw -g window-status-attr none
#setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

#setw -g window-status-bell-attr bold
#setw -g window-status-bell-fg colour255
#setw -g window-status-bell-bg colour1

## }
## The messages {

#set -g message-attr bold
#set -g message-fg colour232
#set -g message-bg colour66
## }

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
source-file ~/.tmux/snap
run '~/.tmux/plugins/tpm/tpm'
